--FUNCTION OF FACTORIAL
CREATE OR REPLACE FUNCTION FACT(NUM IN NUMBER)
RETURN NUMBER
IS
FACTORIAL NUMBER:=1;
TEMP NUMBER:=NUM;
BEGIN
WHILE(TEMP > 0)
LOOP
FACTORIAL:=FACTORIAL*TEMP;
TEMP:=TEMP-1;
END LOOP;
RETURN FACTORIAL;
END;
/

DECLARE 
NUM NUMBER:=&NUMBER;
FACTORIAL NUMBER;
BEGIN
FACTORIAL:=FACT(NUM);
DBMS_OUTPUT.PUT_LINE('FACTORIAL :: '||FACTORIAL);
END;
/


-- PROCEDURE EXAMPLE
CREATE OR REPLACE PROCEDURE add_and_print (
  num1 NUMBER, -- IN (OPTIONAL)
  num2 NUMBER   -- IN 
) IS
  result NUMBER;
BEGIN
  -- Add the two numbers
  result := num1 + num2;

  -- Print the result to the console
  DBMS_OUTPUT.PUT_LINE('Result of addition: ' || result);
END;
/

--Calling Procedure
DECLARE
  number1 NUMBER := 5;
  number2 NUMBER := 7;
BEGIN
  add_and_print(number1, number2);
END;
/



--PRACTICE SHEET UNIT 3 
--1. Write a PLSQL block to create a function called avg_sal and find average salary of all the employees.
CREATE OR REPLACE FUNCTION AVG_SAL
RETURN NUMBER
AS
AVG NUMBER;
BEGIN
SELECT AVG(SALARY) INTO AVG FROM EMPLOYEE WHERE ENO > 0;
RETURN AVG;
END;
/

DECLARE
AVERAGE NUMBER;
BEGIN
AVERAGE:=AVG_SAL();
DBMS_OUTPUT.PUT_LINE('');
DBMS_OUTPUT.PUT_LINE('AVERAGE SALARY OF ALL EMPLOYEES : '||AVERAGE);
END;
/

--2. Write a PLSQL block to create a function called max_sal and find maximum salary from employee table.
--SAME AS 2 USE MAX(SALARY) INSTEAD OF AVG(SALARY)

--3. Write a PLSQL block to fetch employee name whose eno is 1 and raise an exception if no recordfound.
DECLARE 
NO EMPLOYEE.ENO%TYPE:=&EMPLOYEE_NO;
NAME EMPLOYEE.ENAME%TYPE;
BEGIN
SELECT ENAME INTO NAME FROM EMPLOYEE WHERE ENO=NO;
DBMS_OUTPUT.PUT_LINE('EMPLOYEE NAME :: '||NAME);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('EXCEPTION :: EMPLOYEE NO IS INCORRECT !! ');
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('EXCEPTION :: SOME OTHER ERROR !! ');
END;
/

--4. Write a PLSQL block to create a procedure to count total number of employees in a table 
--and raise an exception if the table is empty. 
CREATE OR REPLACE PROCEDURE TOTAL_EMP
IS
TOTAL NUMBER;
BEGIN
SELECT COUNT(*) INTO TOTAL FROM EMPLOYEE WHERE ENO > 0;
IF TOTAL = 0 THEN
RAISE NO_DATA_FOUND;
ELSE
DBMS_OUTPUT.PUT_LINE('TOTAL EMPLOYEE :: '||TOTAL);
END IF;
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('EXCEPTION :: EMPLOYEE TABLE IS EMPTY !!');
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('EXCEPTION :: SOME OTHER ERROR !! ');
END;
/
